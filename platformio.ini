; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[platformio]
default_envs = esp32_playground   ; Default build target, can be switched via CLI
src_dir = ${PROJECT_DIR}
; -------------------------------
; ESP32 - ESP-IDF Framework
; -------------------------------
[env:esp32_playground]
platform = espressif32
board = esp32dev
framework = arduino
upload_speed = 921600
monitor_speed = 115200
build_src_filter = -<*> +<board-packages/esp32/> +<core/> +<lib/> +<targets/playground>

; ; -------------------------------
; ; STM32H743 - STM32Cube Framework
; ; -------------------------------
; [env:stm32h743]
; platform = ststm32
; board = nucleo_h743zi
; framework = stm32cube
; upload_protocol = stlink
; debug_tool = stlink
; src_filter = -<*> +<board-packages/stm32h743/> +<lib/> +<include/>

; ; -------------------------------
; ; ATmega328P (Arduino Uno)
; ; -------------------------------
; [env:atmega328p]
; platform = atmelavr
; board = uno
; framework = arduino
; upload_speed = 115200
; monitor_speed = 9600
; src_filter = +<board-packages/atmega328p/> +<lib/> +<include/>



; [platformio]
; default_envs = flight_computer

; [env:native]
; platform = native
; test_framework = googletest
; build_flags = -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk

; [env:flight_computer]
; platform = espressif32
; board = esp32dev
; board_build.flash_size = 4MB
; framework = arduino
; monitor_speed = 115200
; test_framework = googletest
; ; test_framework = unity
; build_unflags = -std=gnu++11 -U__APPLE__
; build_flags = -std=gnu++17

; [env:gnc]
; platform = ststm32
; board = disco_h735ig

; [env:sd_logger]
; platform = espressif32

; [env:power]
; platform = espressif32

; [env:radio]
; platform = espressif32

; [env:recovery]
; platform = espressif32